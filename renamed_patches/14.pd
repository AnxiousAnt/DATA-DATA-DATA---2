#N canvas 433 81 607 691 10;
#N canvas 0 22 450 300 (subpatch) 0;
#X array array99 100 float 0;
#X coords 0 1 99 -1 150 100 1;
#X restore 277 479 graph;
#X msg 149 237 \; array99 resize \$1;
#X floatatom 149 214 0 0 0 0 - - -;
#X floatatom 21 190 0 0 0 0 - - -;
#X obj 21 214 / 100;
#X msg 21 237 \; array99 const \$1;
#X text 18 167 You can send messages to an array object:;
#X msg 286 237 \; array99 print;
#X text 64 192 <-- set to a constant value;
#X text 191 213 resize;
#X text 295 213 print size;
#X text 22 378 read a text file;
#X text 18 446 write a text file;
#X text 143 446 write a WAV format soundfile;
#X msg 261 300 \; array99 normalize;
#X msg 262 337 \; array99 normalize 0.5;
#X text 259 275 normalize to 1 or otherwise;
#X obj 216 425 soundfiler;
#X msg 21 299 \; array99 sinesum 64 0.2 0.2 0.2 0.2;
#X msg 21 336 \; array99 cosinesum 64 0.2 0.2 0.2 0.2;
#X text 25 275 Fourier synthesis (resizes table);
#X text 214 378 read a soundfile;
#X msg 216 402 read ../sound/voice2.wav array99;
#X text 19 37 Arrays in Pd provide a unified way to deal with lists
of numbers \, treating them as either audio samples or for "control"
uses. To make one \, select "array" on the "new" menu. Dialogs appear
to help you choose the name \, number of elements \, and various flags.
;
#X msg 21 398 \; array99 read 15.file.txt;
#X obj 21 469 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 21 487 savepanel;
#X msg 21 520 \; array99 write \$1;
#X obj 145 468 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 145 487 savepanel;
#X obj 145 533 soundfiler;
#X msg 145 510 write \$1 array99;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 22 0 17 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 28 0 29 0;
#X connect 29 0 31 0;
#X connect 31 0 30 0;
