#N canvas 448 39 679 647 10;
#X text 19 37 Besides the metronome \, there are three objects for
dealing with time:;
#X obj 22 130 print;
#X msg 22 72 bang;
#X msg 68 74 stop;
#X obj 22 102 delay 2000;
#X msg 156 230 bang;
#X obj 156 277 timer;
#X text 89 163 The right inlet can be used to set the time value without
scheduling any output.;
#X obj 183 255 delay 123.45;
#X floatatom 156 302 0 0 0 0 - - -;
#X obj 22 458 pipe 2000;
#X floatatom 22 431 0 0 0 0 - - -;
#X floatatom 22 484 0 0 0 0 - - -;
#X text 90 100 The [delay] object schedules an event for a future time
expressed in milliseconds. Unlike in Max \, time values need not be
integers. If a delay has been scheduled and you "bang" it again \,
it is rescheduled (the previously scheduled output is cancelled).;
#X text 19 196 The [timer] object \, shown below \, measures the time
elapsed between its left and right inlets:;
#X text 85 440 The [pipe] object allocates memory dynamically in order
to schedule any number of delayed events. The events may hold any collection
of data (as usual \, for more details you can consult the help window.)
;
#X text 60 380 (Important note: unlike most Pd objects \, [timer] has
a "hot" right inlet and a cold left one. It only triggers output when
it receives a bang to the right-inlet.);
#X text 19 323 Note that all time calculations are idealized with [timer]--
they do not show the effects of computation time or OS latency. This
way you can write deterministic algorithms dealing with time passage.
;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 8 0 6 1;
#X connect 10 0 12 0;
#X connect 11 0 10 0;
