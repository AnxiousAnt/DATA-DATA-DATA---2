#N canvas 370 59 847 721 10;
#X floatatom 22 219 0 0 0 0 - - -;
#X obj 22 192 receive crackers;
#X floatatom 164 219 0 0 0 0 - - -;
#X obj 164 192 receive pickles;
#X obj 22 159 send crackers;
#X obj 164 159 send pickles;
#X obj 293 159 send pickles;
#X floatatom 293 219 0 0 0 0 - - -;
#X obj 293 192 receive pickles;
#X msg 142 308 \; pickles 99 \; crackers 56;
#X floatatom 22 132 0 0 0 0 - - -;
#X floatatom 164 132 0 0 0 0 - - -;
#X floatatom 293 132 0 0 0 0 - - -;
#X obj 348 434 r crackers;
#X obj 348 407 s crackers;
#X text 19 261 You can use the semicolon feature of message boxes to
address receives \, too. This is useful if you want to do a whole list
of things:;
#X text 19 357 The transaction takes place in zero time---i.e. \, if
you tried to use "timer" to measure the time delay between the two
\, you would get zero.;
#X text 19 419 [send] and [receive] can be abbreviated [s] and [r]:
;
#X text 19 38 The [send] and [receive] objects allow you to make non-local
connections. These work globally-- you can use them to make two different
patches intercommunicate if you wish. Any message a [send] gets appears
at the output of every [receive] of the same name. There can be any
number of [send] and [receive] objects sharing the same name:;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 8 0 7 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X connect 12 0 6 0;
